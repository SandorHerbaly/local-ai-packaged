version: '3.9'

volumes:
  n8n_storage:
  postgres_storage:
  ollama_storage:
  qdrant_storage:
  open-webui:
  flowise:
  excel-invoice-processor:
  product_images_storage:  # Dedikált volume a képeknek
  shared_images:  # Megosztott volume a képeknek a Next.js és Nginx között
  invoicer_files:  # Új volume az Invoicer fájlok tárolásához
  ssh_config:  # SSH szerver konfigurációs fájlok
  pgadmin_data:  # Külön volume a pgAdmin adatainak

networks:
  demo:
    external: true

# x-n8n: &service-n8n
#   image: n8nio/n8n:latest
#   networks: ['demo']
#   environment:
#     - DB_TYPE=postgresdb
#     - DB_POSTGRESDB_HOST=postgres
#     - DB_POSTGRESDB_USER=${POSTGRES_USER}
#     - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
#     - N8N_DIAGNOSTICS_ENABLED=false
#     - N8N_PERSONALIZATION_ENABLED=false
#     - N8N_ENCRYPTION_KEY
#     - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
#   links:
#     - postgres

services:
  nginx:
    image: nginx:latest
    networks: ['demo']
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9443:9443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./letsencrypt:/etc/letsencrypt
      - ./nginx/certbot:/var/www/certbot
      - shared_images:/var/www/images  # Módosítva: shared_images használata
      - ./nginx_invoicer_files:/var/www/invoicer_files  # Nginx invoicer fájlok helyi mappára kötése
    depends_on:
      - excel-invoice-processor

  certbot:
    image: certbot/certbot
    networks: ['demo']
    entrypoint: ["tail", "-f", "/dev/null"]
    volumes:
      - ./letsencrypt:/etc/letsencrypt

  #  flowise:
  #    image: flowiseai/flowise
  #    networks: ['demo']
  #    restart: unless-stopped
  #    container_name: flowise
  #    environment:
  #      - PORT=3001
  #    ports:
  #      - 3001:3001
  #    extra_hosts:
  #      - "host.docker.internal:host-gateway"
  #    volumes:
  #      - ~/.flowise:/root/.flowise
  #    entrypoint: /bin/sh -c "sleep 3; flowise start"

  #  open-webui:
  #    image: ghcr.io/open-webui/open-webui:latest
  #    networks: ['demo']
  #    restart: unless-stopped
  #    container_name: open-webui
  #    ports:
  #      - "3000:8080"
  #    extra_hosts:
  #      - "host.docker.internal:host-gateway"
  #    volumes:
  #      - open-webui:/app/backend/data

  postgres:
    build:
      context: .
      dockerfile: Dockerfile
    networks: ['demo']
    restart: unless-stopped
    ports:
      - 5433:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=20Postgre14!
      - POSTGRES_DB=eip_db
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  excel-invoice-processor:
    build:
      context: ./excel-invoice-processor
      dockerfile: Dockerfile
    networks: ['demo']
    container_name: excel-invoice-processor
    ports:
      - "3002:3000"
    environment:
      - DATABASE_URL=postgresql://postgres:20Postgre14!@postgres:5432/eip_db
      - DATABASE_URL_INVOICER=postgresql://postgres:20Postgre14!@postgres:5432/invoicer_db
      - WATCHPACK_POLLING=true
      - IMAGE_SERVER_URL=http://nginx:9000
      - LINKS_IMAGES_PATH=/app/storage/images/crawler  # Fontos: Ez a környezeti változó már helyesen van beállítva
    volumes:
      - ./excel-invoice-processor:/app
      - /app/node_modules
      - shared_images:/app/storage/images  # Módosítva: shared_images használata
      - /var/run/docker.sock:/var/run/docker.sock  # Docker daemon socket megosztása
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  #  n8n:
  #    image: n8nio/n8n:1.73.1
  #    container_name: n8n
  #    networks: ['demo']
  #    restart: unless-stopped
  #    ports:
  #      - 5678:5678
  #    environment:
  #      - DB_TYPE=postgresdb
  #      - DB_POSTGRESDB_HOST=postgres
  #      - DB_POSTGRESDB_USER=${POSTGRES_USER}
  #      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
  #      - N8N_DIAGNOSTICS_ENABLED=false
  #      - N8N_PERSONALIZATION_ENABLED=false
  #      - N8N_ENCRYPTION_KEY
  #      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
  #    volumes:
  #      - n8n_storage:/home/node/.n8n
  #      - ./n8n/backup:/backup
  #      - ./shared:/data/shared
  #    depends_on:
  #      postgres:
  #        condition: service_healthy

  #  seamless-communication:
  #    image: python:3.10-slim
  #    networks: ['demo']
  #    container_name: seamless_communication
  #    working_dir: /app
  #    volumes:
  #      - C:/Users/Sanyi/Documents/github_repos/seamless_communication/seamless_communication:/app
  #    command: ["tail", "-f", "/dev/null"]
  #    environment:
  #      - PYTHONUNBUFFERED=1

  #  ollama:
  #    image: ollama/ollama:latest
  #    networks: ['demo']
  #    restart: unless-stopped
  #    container_name: ollama
  #    ports:
  #      - "11434:11434"
  #    volumes:
  #      - ollama_storage:/root/.ollama
  #    extra_hosts:
  #      - "host.docker.internal:host-gateway"

  # Új szolgáltatások: pgAdmin és SSH szerver
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    networks: ['demo']
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8088:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin  # Javítva: pgadmin_data használata
    depends_on:
      - postgres
    restart: unless-stopped
      
  ssh:
    image: linuxserver/openssh-server
    container_name: ssh-server
    networks: ['demo']
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Budapest
      - PASSWORD_ACCESS=true
      - USER_NAME=dbuser
      - USER_PASSWORD=dbpassword
      # - PUBLIC_KEY=your-public-key  # Alternatív megoldás kulcs-alapú hitelesítéshez
    ports:
      - "2222:2222"  # SSH portra külső port
    volumes:
      - ssh_config:/config
    restart: unless-stopped